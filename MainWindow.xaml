<Window x:Class="Decision_Trees_Visualizer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
        xmlns:wfi="clr-namespace:System.Windows.Forms.Integration;assembly=WindowsFormsIntegration"
        xmlns:local="clr-namespace:Decision_Trees_Visualizer"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.InputBindings>
        <KeyBinding Key="L" Modifiers="Control" Command="{Binding LoadTreeCommand}"/>
        <KeyBinding Key="S" Modifiers="Control" Command="{Binding ExportTreeCommand}"/>
        <KeyBinding Key="I" Modifiers="Control" Command="{Binding ToggleNodeGridCommand}"/>
        <KeyBinding Key="H" Modifiers="Control" Command="{Binding AboutCommand}"/>
    </Window.InputBindings>

    <DockPanel>
        <Menu x:Name="MenuBar" DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="Load Tree" InputGestureText="Ctrl+L" Click="LoadMenuItem_Click"/>
                <MenuItem Header="Export" InputGestureText="Ctrl+S" Click="ExportJsonMenuItem_Click"/>
                <Separator/>
                <MenuItem Header="Recent Files" ItemsSource="{Binding RecentFilesCollection}" IsEnabled="{Binding IsRecentFilesAvailable}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Header" Value="{Binding Header}" />
                            <Setter Property="ToolTip" Value="{Binding ToolTip}" />
                            <Setter Property="Command" Value="{Binding Command}" />
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Close" Click="ExitMenuItem_Click"/>
            </MenuItem>
            <MenuItem Header="View">
                <MenuItem Header="Show/Hide Node Grid" InputGestureText="Ctrl+I" Click="ToggleNodeGridMenuItem_Click"/>
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="About" InputGestureText="Ctrl+H" Click="AboutMenuItem_Click"/>
            </MenuItem>
        </Menu>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <wfi:WindowsFormsHost Name="graphHost" Grid.Column="0" />

            <GridSplitter Width="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="1" Visibility="{Binding NodeGridVisibility}" />

            <DataGrid Name="NodeGrid" Grid.Column="2" AutoGenerateColumns="False" 
                      CanUserSortColumns="True" CanUserResizeColumns="True" CanUserReorderColumns="True"
                      CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="False"
                      ItemsSource="{Binding Nodes, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                      Visibility="{Binding NodeGridVisibility}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="ID" Binding="{Binding Id}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Label" Binding="{Binding Label}" />
                    <DataGridComboBoxColumn Header="Color" SelectedItemBinding="{Binding ColorName, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False">
                        <DataGridComboBoxColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="IsEnabled" Value="{Binding IsClassLeaf}" />
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="Background" Value="White" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsClassLeaf}" Value="False">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="Foreground" Value="Transparent" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridComboBoxColumn.CellStyle>
                    </DataGridComboBoxColumn>
                </DataGrid.Columns>
            </DataGrid>


        </Grid>
    </DockPanel>
</Window>
